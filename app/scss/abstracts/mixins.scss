@mixin transition($par) {
  transition: $par all;
  -webkit-transition: $par all;
  -moz-transition: $par all;
  -ms-transition: $par all;
  -o-transition: $par all;
}

@mixin flexcenter {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin imageFit {
width: 100%;
height: 100%;
object-fit: cover;
}

$media-breakpoints:  (
  // `sm` applies to x-small devices (portrait phones, less than 576px)
  "sm": rem(35.999), // 575.98px

  // `md` applies to small devices (landscape phones, less than 768px)
  "md": rem(47.999), // 767.98px

  // `lg` applies to medium devices (tablets, less than 992px)
  "lg": rem(61.999), // 991.98px

  // `xl` applies to large devices (desktops, less than 1200px)
  "xl": rem(74.999) // 1199.98px

);

@mixin media-breakpoint($breakpoint) {
@if map-has-key($breakpoints, $breakpoint) {
  $breakpoint-value: map-get($breakpoints, $breakpoint);
  @media (min-width: $breakpoint-value) {
    @content;
  }
}
@else {
  @warn 'Invalid breakpoint: #{$breakpoint}.';
}
}
// @include respond-above(md)


@mixin abs-position ($top, $right, $bottom, $left) {
  position: absolute; 
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}
// @include abs-position(top, right, bottom, left)


@mixin placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}


@mixin css3-prefix($prop, $value) {
  -webkit-#{$prop}: #{$value};
  -moz-#{$prop}: #{$value};
  -ms-#{$prop}: #{$value};
  -o-#{$prop}: #{$value};
  #{$prop}: #{$value};
}
// @include css3-prefix(transform, scale3d(2.5, 2, 1.5));



@mixin retina-image($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
      background-image: url($image);
      background-size: $width $height;
  }
}
// @include retina-image("my-image2x.png", 1000px, 500px);

@mixin placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
// @include input-placeholder {
//     color: #333333;
// }



@mixin border-radius($arc) {
-moz-border-radius: $arc;
-webkit-border-radius: $arc;
border-radius: $arc;  
}